#include "opencv.hpp" //OpenCV 라이브러리의 헤더 파일을 포함합니다.
#include <iostream>

using namespace cv;
using namespace std;
//OpenCV와 C++의 std 네임스페이스를 사용합니다.

int main() {
    Mat frame; //이미지나 비디오 프레임을 저장하는 OpenCV의 Mat 클래스를 사용하여 frame 객체를 선언합니다.
    int fps;
    int delay;
    int currentFrame = 0; // 현재 프레임의 순번

    VideoCapture cap; //비디오를 캡처하기 위한 VideoCapture 객체 cap을 선언합니다.

    // check if file exists. If none program ends
    if (cap.open("background.mp4") == 0) { //"background.mp4"라는 파일을 열어서 비디오 캡처 객체 cap에 할당합니다. 만약 파일이 존재하지 않으면 cap.open() 함수는 0을 반환하므로, 이 조건문이 실행됩니다
        cout << "no such file!" << endl;
        waitKey(0);
    }

    fps = cap.get(CAP_PROP_FPS); //비디오의 프레임 속도를 cap.get() 함수를 사용하여 가져와서 fps 변수에 저장합니다.
    delay = 300 / fps; // 한 프레임은 300ms동안 보여진다.

    while (1) {
        cap >> frame; //cap에서 다음 프레임을 읽어와서 frame에 저장합니다.
        if (frame.empty()) { //만약 frame이 비어 있다면 (즉, 더 이상 프레임이 없을 경우),
            cout << "end of video" << endl;
            break; //"end of video"를 출력하고 루프를 종료합니다.
        }
        // 프레임이 비어있지 않다면
        currentFrame++; // 현재 프레임의 순번 증가

        imshow("video", frame); // 그리고 frame을 "video"라는 창에 표시합니다.
        cout << "frame: " << currentFrame << " / " << cap.get(CAP_PROP_FRAME_COUNT) << endl;
        // 또한 별개로 현재 프레임 순번과 총 프레임 수를 출력합니다.
        waitKey(delay); //delay 시간 만큼 대기합니다.
    }
    return 0;
}
